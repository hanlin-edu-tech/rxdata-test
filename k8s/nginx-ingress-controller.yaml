apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cluster-admins
subjects:
- kind: User
  name: $GCP_USER_ACCOUNT
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: ""

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-ingress-serviceaccount
  namespace: kube-system

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: nginx-ingress-clusterrole
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
        - events
    verbs:
        - create
        - patch
  - apiGroups:
      - "extensions"
    resources:
      - ingresses/status
    verbs:
      - update

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: nginx-ingress-role
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      - "ingress-controller-leader-nginx"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: nginx-ingress-role-nisa-binding
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nginx-ingress-role
subjects:
  - kind: ServiceAccount
    name: nginx-ingress-serviceaccount
    namespace: kube-system

---

apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: nginx-ingress-clusterrole-nisa-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-ingress-clusterrole
subjects:
  - kind: ServiceAccount
    name: nginx-ingress-serviceaccount
    namespace: kube-system

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-configuration
  namespace: kube-system
  labels:
    app: ingress-nginx
data:
  ssl-redirect: "false"
  proxy-body-size: "40m"
  large-client-header-buffers: "4 512k"
  proxy-stream-timeout: "1200s"
  client-header-timeout: "1200"
  client-body-timeout: "1200"
  proxy-connect-timeout: "1200"
  proxy-read-timeout: "1200"
  proxy-send-timeout: "1200"
  access-log-path: "/dev/stdout"
  error-log-path: "/dev/stderr"
  http-redirect-code: "301"

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata: 
  name: nginx-ingress-controller
  namespace: kube-system
spec: 
  replicas: 1
  template: 
    metadata: 
      labels: 
        app: ingress-nginx
    spec: 
      serviceAccountName: nginx-ingress-serviceaccount
      containers: 
        - args: 
            - /nginx-ingress-controller
            - --default-backend-service=kube-system/default-http-backend
            - --annotations-prefix=nginx.ingress.kubernetes.io
            - --configmap=kube-system/nginx-configuration
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.15.0
          imagePullPolicy: Always
          name: nginx-ingress-controller
          ports: 
            - containerPort: 80
              name: http
              protocol: TCP
      terminationGracePeriodSeconds: 60

---

kind: Service
apiVersion: v1
metadata:
  name: ingress-nginx-service
  namespace: kube-system
  labels:
    app: ingress-nginx
spec:
  type: NodePort
  selector:
    app: ingress-nginx
  ports:
    - protocol: TCP
      port: 80
      nodePort: 30000
